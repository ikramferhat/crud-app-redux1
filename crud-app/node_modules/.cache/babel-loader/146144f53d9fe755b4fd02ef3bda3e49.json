{"ast":null,"code":"import { ActionType } from \"../constants/action_type\";\nconst initialState = {\n  users: []\n};\nexport const UsersReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case ActionType.GET_USERS:\n      return { ...state,\n        users: action.payload\n      };\n\n    case ActionType.REMOVE_SELECTED_USER:\n      return { ...state.filter(post => post.id !== action.payload)\n      };\n\n    case ActionType.ADD_USER:\n    case ActionType.UPDATE_USER:\n      return { ...state\n      };\n\n    case ActionType.GET_SINGLE_USER:\n      return { ...state,\n        oneuser: action.payload\n      };\n\n    default:\n      return state;\n  }\n};\n_c = UsersReducer;\n\nvar _c;\n\n$RefreshReg$(_c, \"UsersReducer\");","map":{"version":3,"sources":["/home/ikram/Desktop/WORK/crudApp/crud-app/src/redux/reducer/UserReduer.js"],"names":["ActionType","initialState","users","UsersReducer","state","action","type","GET_USERS","payload","REMOVE_SELECTED_USER","filter","post","id","ADD_USER","UPDATE_USER","GET_SINGLE_USER","oneuser"],"mappings":"AAAA,SAASA,UAAT,QAA2B,0BAA3B;AAEA,MAAMC,YAAY,GAAE;AAChBC,EAAAA,KAAK,EAAE;AADS,CAApB;AAIA,OAAO,MAAMC,YAAY,GAAE,YAAiC;AAAA,MAAhCC,KAAgC,uEAAxBH,YAAwB;AAAA,MAAXI,MAAW;;AACxD,UAAOA,MAAM,CAACC,IAAd;AACE,SAAKN,UAAU,CAACO,SAAhB;AACE,aAAO,EACC,GAAGH,KADJ;AAECF,QAAAA,KAAK,EAAEG,MAAM,CAACG;AAFf,OAAP;;AAIF,SAAKR,UAAU,CAACS,oBAAhB;AACA,aAAO,EACL,GAAGL,KAAK,CAACM,MAAN,CAAcC,IAAD,IAAUA,IAAI,CAACC,EAAL,KAAYP,MAAM,CAACG,OAA1C;AADE,OAAP;;AAGA,SAAKR,UAAU,CAACa,QAAhB;AACA,SAAKb,UAAU,CAACc,WAAhB;AACI,aAAO,EACC,GAAGV;AADJ,OAAP;;AAGJ,SAAKJ,UAAU,CAACe,eAAhB;AACI,aAAO,EACC,GAAGX,KADJ;AAECY,QAAAA,OAAO,EAACX,MAAM,CAACG;AAFhB,OAAP;;AAIJ;AACI,aAAOJ,KAAP;AArBN;AAuBD,CAxBI;KAAMD,Y","sourcesContent":["import { ActionType } from \"../constants/action_type\";\n\nconst initialState ={\n    users: [],\n}; \n\nexport const UsersReducer =(state = initialState,action) => {\n    switch(action.type){\n      case ActionType.GET_USERS:\n        return {\n                ...state,\n                users: action.payload\n        }\n      case ActionType.REMOVE_SELECTED_USER: \n      return {\n        ...state.filter((post) => post.id !== action.payload)\n      }\n      case ActionType.ADD_USER:\n      case ActionType.UPDATE_USER:\n          return {\n                  ...state\n            }\n      case ActionType.GET_SINGLE_USER:\n          return {\n                  ...state,\n                  oneuser:action.payload\n            }\n      default:\n          return state;\n    }\n  } \n\n\n"]},"metadata":{},"sourceType":"module"}