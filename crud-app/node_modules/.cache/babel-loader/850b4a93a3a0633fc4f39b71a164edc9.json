{"ast":null,"code":"var _jsxFileName = \"/home/ikram/Desktop/my_projet/reactAPP/TP/AXIOS + REDUX/crudApp/crud-app/src/components/crud/UpdateUser.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport { Grid, Button } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport axios from \"axios\";\nimport { getSingleUser } from '../../redux/actions/actions';\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    '& .MuiTextField-root': {\n      marginBottom: theme.spacing(2),\n      width: '100%'\n    }\n  }\n}));\n\nconst UpdateUser = () => {\n  _s();\n\n  const classes = useStyles();\n  const [state, setState] = useState({\n    firstname: \"\",\n    email: \"\",\n    gender: \"female\"\n  });\n  const dispatch = useDispatch();\n  let {\n    id\n  } = useParams();\n  const {\n    user\n  } = useSelector(state => state.allUsers);\n  const {\n    firstname,\n    email,\n    gender\n  } = state;\n  const navigate = useNavigate();\n\n  const handleChange = e => {\n    let {\n      name,\n      value\n    } = e.target;\n    setState({ ...state,\n      [name]: value\n    });\n  };\n\n  const getSingle = userid => {\n    return function (dispatch) {\n      axios.get(`http://localhost:5000/users/${userid}`).then(res => {\n        console.log('data', res.data);\n        dispatch(getSingleUser(res.data));\n      }).catch(error => console.log(error));\n    };\n  };\n\n  useEffect(() => {\n    dispatch(getSingle(id));\n  }, []);\n  useEffect(() => {\n    if (user) {\n      setState({ ...OneUser\n      });\n    }\n  }, [OneUser]);\n\n  const onUpdate = user => {\n    return function (dispatch) {\n      axios.put(`http://localhost:5000/users/${user.id}`, user).then(ress => {\n        dispatch(getSingleUser());\n      });\n    };\n  };\n\n  const onSubmit = e => {\n    e.preventDefault();\n\n    if (!firstname || !email || !gender) {\n      alert('Please input all input field');\n    } else {\n      dispatch(onUpdate(state));\n      navigate(\"/\");\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    sm: 10,\n    style: {\n      display: \"flex\",\n      justifyContent: \"flex-start\",\n      margin: \"0 auto\"\n    },\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      sm: 8,\n      style: {\n        padding: \"0px 4%\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"EDIT USER\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        style: {\n          marginBottom: \"20px\"\n        },\n        onClick: () => navigate(\"/\"),\n        variant: \"contained\",\n        color: \"primary\",\n        children: \"GO BACK\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: onSubmit,\n        className: classes.root,\n        noValidate: true,\n        autoComplete: \"off\",\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          name: \"firstname\",\n          label: \"First Name\",\n          value: firstname,\n          onChange: handleChange,\n          type: \"text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          name: \"email\",\n          label: \"Email\",\n          value: email,\n          onChange: handleChange,\n          type: \"email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          name: \"gender\",\n          select: true,\n          label: \"Gender\",\n          value: gender,\n          onChange: handleChange,\n          SelectProps: {\n            native: true\n          },\n          helperText: \"Please select your gender\",\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"male\",\n            children: \"Male\"\n          }, \"male\", false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 26\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"female\",\n            children: \"Female\"\n          }, \"female\", false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          style: {\n            marginTop: \"10px\"\n          },\n          variant: \"contained\",\n          color: \"primary\",\n          children: \"UPDATE\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 9\n  }, this);\n};\n\n_s(UpdateUser, \"R/FA/6x9wb3jYkYboDi3CXoI3XM=\", false, function () {\n  return [useStyles, useDispatch, useParams, useSelector, useNavigate];\n});\n\n_c = UpdateUser;\nexport default UpdateUser;\n\nvar _c;\n\n$RefreshReg$(_c, \"UpdateUser\");","map":{"version":3,"sources":["/home/ikram/Desktop/my_projet/reactAPP/TP/AXIOS + REDUX/crudApp/crud-app/src/components/crud/UpdateUser.js"],"names":["React","useState","useEffect","TextField","Grid","Button","makeStyles","useNavigate","useParams","axios","getSingleUser","useSelector","useDispatch","useStyles","theme","root","marginBottom","spacing","width","UpdateUser","classes","state","setState","firstname","email","gender","dispatch","id","user","allUsers","navigate","handleChange","e","name","value","target","getSingle","userid","get","then","res","console","log","data","catch","error","OneUser","onUpdate","put","ress","onSubmit","preventDefault","alert","display","justifyContent","margin","padding","native","marginTop"],"mappings":"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","sourcesContent":["import React,{useState, useEffect} from 'react'\nimport TextField from '@material-ui/core/TextField';\nimport { Grid,Button} from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport {useNavigate,useParams} from 'react-router-dom';\nimport axios from \"axios\"\nimport {getSingleUser} from '../../redux/actions/actions'\nimport {useSelector, useDispatch} from \"react-redux\"\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    '& .MuiTextField-root': {\n        marginBottom: theme.spacing(2),\n         width: '100%',\n    }\n    },\n  }));\n\n \nconst UpdateUser = () => {\n    const classes = useStyles();\n    const [state,setState] = useState({\n        firstname:\"\",\n        email:\"\",\n        gender:\"female\",\n    });\n    const dispatch = useDispatch()\n    let {id} = useParams()\n    const {user} = useSelector((state) => state.allUsers)\n    const{firstname,email,gender}=state;\n    const navigate = useNavigate();\n\n    const handleChange = (e) => {\n       let{name,value}= e.target;\n       setState({...state,[name]: value})\n  };\n\n\n    \n  const getSingle = (userid) => {\n    return function(dispatch){\n  axios.get(`http://localhost:5000/users/${userid}`)\n  .then((res)=>{\n      console.log('data',res.data)\n      dispatch(getSingleUser(res.data))\n  })\n  .catch((error)=> console.log(error))    \n}}\n\nuseEffect(() => {\n  dispatch(getSingle(id))\n },[]);\n\nuseEffect(() => {\n  if(user){\n    setState({...OneUser})\n  }\n },[OneUser]);\n\n    const onUpdate = (user) => {\n        return function(dispatch){\n      axios.put(`http://localhost:5000/users/${user.id}`,user)\n      .then((ress)=>{\n          dispatch(getSingleUser())\n      })    \n    }}\n\n    const onSubmit = (e) => {\n        e.preventDefault() \n           if (!firstname || !email || !gender){\n             alert('Please input all input field')\n           } \n           else {\n            dispatch(onUpdate(state))\n            navigate(\"/\")\n           }\n         }\n   \n    return (\n        <Grid container  sm={10} style={{display: \"flex\", justifyContent:\"flex-start\" ,margin:\"0 auto\"}}>\n            <Grid item xs={12} sm={8} style={{padding: \"0px 4%\",}}>\n               \n                <h3>EDIT USER</h3>\n              \n                <Button style={{marginBottom:\"20px\"}} onClick={()=>  navigate(\"/\")}  variant=\"contained\" color=\"primary\">GO BACK</Button>\n                \n                <form onSubmit={onSubmit} className={classes.root}  noValidate autoComplete=\"off\">                  \n                    <TextField name=\"firstname\" label=\"First Name\"  value={firstname} onChange={handleChange} type=\"text\" />\n                    <TextField name=\"email\" label=\"Email\" value={email} onChange={handleChange} type=\"email\"/>  \n                    <TextField                   \n                       name=\"gender\"\n                       select\n                       label=\"Gender\"\n                       value={gender}\n                       onChange={handleChange}\n                       SelectProps={{\n                        native: true,\n                      }}\n                       helperText=\"Please select your gender\"\n                    >\n                         <option key=\"male\" value=\"male\">\n                        Male\n                        </option>\n                        <option key=\"female\" value=\"female\">\n                        Female\n                        </option>\n                    </TextField>\n                    <Button  type='submit' style={{marginTop:\"10px\"}} variant=\"contained\" color=\"primary\">UPDATE</Button>\n\n                </form>\n            </Grid>\n        </Grid>\n)}\n\nexport default UpdateUser\n\n"]},"metadata":{},"sourceType":"module"}